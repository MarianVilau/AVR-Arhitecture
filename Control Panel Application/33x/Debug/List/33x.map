###############################################################################
#
# IAR UBROF Linker V8.10.1.1784/W64 for Microchip AVR     14/Jul/2023  15:51:04
# Copyright 2017-2023 IAR Systems AB.
#
#    Target Cpu    =  AVR
#    Map file      =
#        B:\MQ_Summer_Internship_2023\Project\33x\Debug\List\33x.map
#    Output file 1 =
#        B:\MQ_Summer_Internship_2023\Project\33x\Debug\Exe\33x.d90
#                  =  Format: debug
#                  =  UBROF version 12.0.0
#                  =  Using library modules for C-SPY (-rt)
#    Command line  =
#        -f B:\MQ_Summer_Internship_2023\Project\33x\Debug\Exe\33x.d90.rsp
#        (B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\cpanel.r90
#        B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\gpio.r90
#        B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\led.r90
#        B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\main.r90
#        B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\pins.r90 --output
#        B:\MQ_Summer_Internship_2023\Project\33x\Debug\Exe\33x.d90 -l
#        B:\MQ_Summer_Internship_2023\Project\33x\Debug\List\33x.map -xaems
#        "-IC:\Program Files\IAR Systems\Embedded Workbench 9.1\avr\lib\\" --f
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.1\avr/src/template/cfgm324pb.xcl" (-D_..X_INTVEC_SIZE=CC
#        -D_..X_FLASH_END=7FFF -D_..X_FLASH_NEND=_..X_FLASH_END
#        -D_..X_SRAM_BASE=100 -D_..X_SRAM_TBASE=0 -D_..X_SRAM_TSIZE=0
#        -D_..X_SRAM_END=8FF -D_..X_EXT_SRAM_BASE=_..X_SRAM_END
#        -D_..X_EXT_SRAM_SIZE=0 -D_..X_EXT_ROM_BASE=_..X_SRAM_END
#        -D_..X_EXT_ROM_SIZE=0 -D_..X_EXT_NV_BASE=_..X_SRAM_END
#        -D_..X_EXT_NV_SIZE=0 -D_..X_EEPROM_START=0 -D_..X_EEPROM_END=3FF)
#        -D_..X_HEAP_SIZE=0 -D_..X_TINY_HEAP_SIZE=0 -D_..X_NEAR_HEAP_SIZE=20
#        -D_..X_FAR_HEAP_SIZE=0 -D_..X_HUGE_HEAP_SIZE=0 -D_..X_CSTACK_SIZE=20
#        -D_..X_RSTACK_SIZE=20 -D_..X_FLASH_CODE_END=_..X_FLASH_END --f
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.1\avr/src/template/cfg3soim.xcl" (-ca90 -w29
#        "-Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)"
#        "-Z(CODE)TINY_F=_..X_FLASH_BASE-FF"
#        "-Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND"
#        "-Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND"
#        "-Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND"
#        "-Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END"
#        "-P(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10000"
#        "-Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END"
#        "-Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END"
#        "-Z(CODE).iar.locale_table,.iar.locale_encoding,__iar_tls$$INIT_DATA=_..X_FLASH_BASE-_..X_FLASH_END"
#        "-Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END"
#        "-Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END"
#        "-Z(CODE)CHECKSUM#_..X_FLASH_END"
#        "-Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_..X_SRAM_TSIZE"
#        "-Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE-_..X_CSTACK_END"
#        "-Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_SRAM_END"
#        "-Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END"
#        "-Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_BASE-_..X_SRAM_END"
#        "-Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE-_..X_RSTACK_END"
#        "-Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_SRAM_END"
#        "-Z(DATA)__iar_tls$$DATA=_..X_SRAM_BASE-_..X_SRAM_END"
#        "-Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X_EEPROM_END")
#        -D_..X_FLASH_BASE=_..X_INTVEC_SIZE
#        "-h'1895'(CODE)0-(_..X_INTVEC_SIZE-1)"
#        -D_..X_CSTACK_BASE=_..X_SRAM_BASE -D_..X_CSTACK_END=_..X_SRAM_END
#        -D_..X_RSTACK_BASE=_..X_SRAM_BASE -D_..X_RSTACK_END=_..X_SRAM_END -rt
#        --entry __program_start --text_out locale)
#
###############################################################################






                ****************************************
                *                                      *
                *            PROGRAM ENTRY             *
                *                                      *
                ****************************************

  ADDRESS     SPACE  TYPE         MODULE
  -------     -----  ----         ------
  0x000001E4  CODE   Relocatable  ?C_STARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  ATTRIBUTE                   VALUE
  ---------                   -----
  R4                          REG
  R5                          REG
  __64bit_doubles             disabled
  __SystemLibrary             DLib
  __architecture              *
  __cpu                       3
  __cpu_name                  ATmega324PB
  __dlib_full_locale_support  0
  __dlib_version              6
  __enhanced_core             enabled
  __enhanced_core_mul         enabled
  __has_elpm                  false
  __memory_model              2
  __mex                       disabled
  __rt_version                3
  __tiny_avr                  false
  __vtable_memory             __nearflash


                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                   There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *   AUTOMATICALLY SELECTED LIBRARIES   *
                *                                      *
                ****************************************

                  C:\Program Files\IAR Systems\Embedded Workbench 9.1\avr\lib\dlib\dlAVR-3s-ec_mul-sf-n.r90



                ****************************************
                *                                      *
                *              ENTRY LIST              *
                *                                      *
                ****************************************

ENTRY                 SPACE  ADDRESS     KIND  TYPE  MODULE
-----                 -----  -------     ----  ----  ------
DDRA                            N/A      Loc         main
DDRC                            N/A      Loc         main
DDRD                            N/A      Loc         main
PORTA                           N/A      Loc         main
PORTC                           N/A      Loc         main
PORTD                           N/A      Loc         main
_..X_HUGE_HEAP_SIZE   CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_FAR_HEAP_SIZE    CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_TINY_HEAP_SIZE   CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_HEAP_SIZE        CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_EEPROM_START     CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_EXT_NV_SIZE      CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_EXT_ROM_SIZE     CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_EXT_SRAM_SIZE    CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_SRAM_TSIZE       CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
_..X_SRAM_TBASE       CODE   0x00000000  Pub         ?ABS_ENTRY_MOD [0]
?RESET                CODE   0x00000000  Pub         ?RESET [1]
_..X_RSTACK_SIZE      CODE   0x00000020  Pub         ?ABS_ENTRY_MOD [0]
_..X_CSTACK_SIZE      CODE   0x00000020  Pub         ?ABS_ENTRY_MOD [0]
_..X_NEAR_HEAP_SIZE   CODE   0x00000020  Pub         ?ABS_ENTRY_MOD [0]
_..X_FLASH_BASE       CODE   0x000000CC  Pub         ?ABS_ENTRY_MOD [0]
_..X_INTVEC_SIZE      CODE   0x000000CC  Pub         ?ABS_ENTRY_MOD [0]
btn_state             CODE   0x000000DC  Pub   Code  main
_..X_RSTACK_BASE      CODE   0x00000100  Pub         ?ABS_ENTRY_MOD [0]
_..X_CSTACK_BASE      CODE   0x00000100  Pub         ?ABS_ENTRY_MOD [0]
_..X_SRAM_BASE        CODE   0x00000100  Pub         ?ABS_ENTRY_MOD [0]
btn_read_state        CODE   0x00000102  Pub   Code  main
main                  CODE   0x0000014C  Pub   Code  main
__DebugBreak          CODE   0x000001C8  Pub   Code  ?__dbg_break [1]
__exit                CODE   0x000001CA  Pub   Code  ?__exit [1]
_exit                 CODE   0x000001E0  Pub   Code  ?_exit [1]
__program_start       CODE   0x000001E4  Pub         ?C_STARTUP [1]
?C_STARTUP            CODE   0x000001E4  Pub         ?C_STARTUP [1]
__RESTART             CODE   0x000001E4  Pub         ?C_STARTUP [1]
?call_low_level_init  CODE   0x000001F0  Pub         ?C_STARTUP [1]
?cstartup_call_main   CODE   0x000001F4  Pub         ?C_STARTUP [1]
exit                  CODE   0x00000200  Pub   Code  ?exit [1]
GET_INFO_S            CODE   0x00000204  Loc         ?xV_SWITCH_L06 [1]
GET_INFO_C            CODE   0x00000206  Loc         ?xV_SWITCH_L06 [1]
?SV_SWITCH_L06        CODE   0x00000212  Pub         ?xV_SWITCH_L06 [1]
P_0_S                 CODE   0x00000218  Loc         ?xV_SWITCH_L06 [1]
CHECK_LOW_LIMIT       CODE   0x0000021E  Loc         ?xV_SWITCH_L06 [1]
__low_level_init      CODE   0x0000028A  Pub   Code  ?low_level_init [1]
_..X_EEPROM_END       CODE   0x000003FF  Pub         ?ABS_ENTRY_MOD [0]
_..X_RSTACK_END       CODE   0x000008FF  Pub         ?ABS_ENTRY_MOD [0]
_..X_CSTACK_END       CODE   0x000008FF  Pub         ?ABS_ENTRY_MOD [0]
_..X_EXT_NV_BASE      CODE   0x000008FF  Pub         ?ABS_ENTRY_MOD [0]
_..X_EXT_ROM_BASE     CODE   0x000008FF  Pub         ?ABS_ENTRY_MOD [0]
_..X_EXT_SRAM_BASE    CODE   0x000008FF  Pub         ?ABS_ENTRY_MOD [0]
_..X_SRAM_END         CODE   0x000008FF  Pub         ?ABS_ENTRY_MOD [0]
_..X_FLASH_CODE_END   CODE   0x00007FFF  Pub         ?ABS_ENTRY_MOD [0]
_..X_FLASH_NEND       CODE   0x00007FFF  Pub         ?ABS_ENTRY_MOD [0]
_..X_FLASH_END        CODE   0x00007FFF  Pub         ?ABS_ENTRY_MOD [0]
__?EECR               DATA   0x0000001F  Pub         cpanel
__?EEDR               DATA   0x00000020  Pub         cpanel
_A_PINA               DATA   0x00000020  Pub   Data  main
PINA                  DATA   0x00000020  Loc         main
__?EEARL              DATA   0x00000021  Pub         cpanel
_A_DDRA               DATA   0x00000021  Pub   Data  led
DDRA                  DATA   0x00000021  Loc         led
__?EEARH              DATA   0x00000022  Pub         cpanel
_A_PORTA              DATA   0x00000022  Pub   Data  led
PORTA                 DATA   0x00000022  Loc         led
_A_PINC               DATA   0x00000026  Pub   Data  main
PINC                  DATA   0x00000026  Loc         main
_A_DDRC               DATA   0x00000027  Pub   Data  led
DDRC                  DATA   0x00000027  Loc         led
_A_PORTC              DATA   0x00000028  Pub   Data  led
PORTC                 DATA   0x00000028  Loc         led
_A_DDRD               DATA   0x0000002A  Pub   Data  led
DDRD                  DATA   0x0000002A  Loc         led
_A_PORTD              DATA   0x0000002B  Pub   Data  led
PORTD                 DATA   0x0000002B  Loc         led

[0] = Command line (linker generated)
[1] = C:\Program Files\IAR Systems\Embedded Workbench 9.1\avr\lib\dlib\dlAVR-3s-ec_mul-sf-n.r90


                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************

Linker generated:
  Module: ?ABS_ENTRY_MOD

      Absolute module symbols:
        _..X_RSTACK_END      0x000008FF  Pub
        _..X_RSTACK_BASE     0x00000100  Pub
        _..X_CSTACK_END      0x000008FF  Pub
        _..X_CSTACK_BASE     0x00000100  Pub
        _..X_FLASH_BASE      0x000000CC  Pub
        _..X_FLASH_CODE_END  0x00007FFF  Pub
        _..X_RSTACK_SIZE     0x00000020  Pub
        _..X_CSTACK_SIZE     0x00000020  Pub
        _..X_HUGE_HEAP_SIZE  0x00000000  Pub
        _..X_FAR_HEAP_SIZE   0x00000000  Pub
        _..X_NEAR_HEAP_SIZE  0x00000020  Pub
        _..X_TINY_HEAP_SIZE  0x00000000  Pub
        _..X_HEAP_SIZE       0x00000000  Pub
        _..X_EEPROM_END      0x000003FF  Pub
        _..X_EEPROM_START    0x00000000  Pub
        _..X_EXT_NV_SIZE     0x00000000  Pub
        _..X_EXT_NV_BASE     0x000008FF  Pub
        _..X_EXT_ROM_SIZE    0x00000000  Pub
        _..X_EXT_ROM_BASE    0x000008FF  Pub
        _..X_EXT_SRAM_SIZE   0x00000000  Pub
        _..X_EXT_SRAM_BASE   0x000008FF  Pub
        _..X_SRAM_END        0x000008FF  Pub
        _..X_SRAM_TSIZE      0x00000000  Pub
        _..X_SRAM_TBASE      0x00000000  Pub
        _..X_SRAM_BASE       0x00000100  Pub
        _..X_FLASH_NEND      0x00007FFF  Pub
        _..X_FLASH_END       0x00007FFF  Pub
        _..X_INTVEC_SIZE     0x000000CC  Pub
**************************************************************
File: B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\cpanel.r90
  Module: cpanel
       Segment part 1, ABSOLUTE [root]
       Address: DATA 0x0000001F Size: 0x0 Align: 1(0)
      __?EECR              0x0000001F  Pub
    --------------------------------------------------
       Segment part 2, ABSOLUTE [root]
       Address: DATA 0x00000020 Size: 0x0 Align: 1(0)
      __?EEDR              0x00000020  Pub
    --------------------------------------------------
       Segment part 3, ABSOLUTE [root]
       Address: DATA 0x00000021 Size: 0x0 Align: 1(0)
      __?EEARL             0x00000021  Pub
    --------------------------------------------------
       Segment part 4, ABSOLUTE [root]
       Address: DATA 0x00000022 Size: 0x0 Align: 1(0)
      __?EEARH             0x00000022  Pub
**************************************************************
File: B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\gpio.r90
  Module: gpio
**************************************************************
File: B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\led.r90
  Module: led
       Segment part 1, ABSOLUTE [root]
       Address: DATA 0x0000002B Size: 0x1 Align: 1(0)
       Ref by:   main (main)
      _A_PORTD             0x0000002B  Pub
      PORTD                0x0000002B  Loc
    --------------------------------------------------
       Segment part 2, ABSOLUTE [root]
       Address: DATA 0x0000002A Size: 0x1 Align: 1(0)
       Ref by:   main (main)
      _A_DDRD              0x0000002A  Pub
      DDRD                 0x0000002A  Loc
    --------------------------------------------------
       Segment part 3, ABSOLUTE [root]
       Address: DATA 0x00000028 Size: 0x1 Align: 1(0)
       Ref by:   main (main)
      _A_PORTC             0x00000028  Pub
      PORTC                0x00000028  Loc
    --------------------------------------------------
       Segment part 4, ABSOLUTE [root]
       Address: DATA 0x00000027 Size: 0x1 Align: 1(0)
       Ref by:   main (main)
      _A_DDRC              0x00000027  Pub
      DDRC                 0x00000027  Loc
    --------------------------------------------------
       Segment part 5, ABSOLUTE [root]
       Address: DATA 0x00000022 Size: 0x1 Align: 1(0)
       Ref by:   main (main)
      _A_PORTA             0x00000022  Pub
      PORTA                0x00000022  Loc
    --------------------------------------------------
       Segment part 6, ABSOLUTE [root]
       Address: DATA 0x00000021 Size: 0x1 Align: 1(0)
       Ref by:   main (main)
      _A_DDRA              0x00000021  Pub
      DDRA                 0x00000021  Loc
**************************************************************
File: B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\main.r90
  Module: main
       Segment part 5, ABSOLUTE [root]
       Address: DATA 0x00000026 Size: 0x1 Align: 1(0)
       Ref by:   btn_state
      _A_PINC              0x00000026  Pub
      PINC                 0x00000026  Loc
    --------------------------------------------------
       Segment part 8, ABSOLUTE [root]
       Address: DATA 0x00000020 Size: 0x1 Align: 1(0)
       Ref by:   btn_state
      _A_PINA              0x00000020  Pub
      PINA                 0x00000020  Loc
    --------------------------------------------------
       Segment part 15, CODE
       Address: CODE 0x000000DC Size: 0x26 Align: 2(1)
       Ref by:   Segment part 18
                 btn_read_state
      btn_state            0x000000DC  Pub
    --------------------------------------------------
       Segment part 16, CODE
       Address: CODE 0x00000102 Size: 0x4A Align: 2(1)
       Ref by:   main
      btn_read_state       0x00000102  Pub
    --------------------------------------------------
       Segment part 17, CODE
       Address: CODE 0x0000014C Size: 0x7C Align: 2(1)
      main                 0x0000014C  Pub  Ref by:   ?cstartup_call_main (?C_STARTUP)
    --------------------------------------------------
       Segment part 18, SWITCH
       Address: CODE 0x000000CC Size: 0x10 Align: 2(1)
       Ref by:   btn_state
**************************************************************
File: B:\MQ_Summer_Internship_2023\Project\33x\Debug\Obj\pins.r90
  Module: pins
**************************************************************
File: C:\Program Files\IAR Systems\Embedded Workbench 9.1\avr\lib\dlib\dlAVR-3s-ec_mul-sf-n.r90
  Module: ?__dbg_break
       Segment part 3, CODE
       Address: CODE 0x000001C8 Size: 0x2 Align: 2(1)
      __DebugBreak         0x000001C8  Pub  Ref by:   __exit (?__exit)
  ============================================================
  Module: ?__exit
       Segment part 3, CODE
       Address: CODE 0x000001CA Size: 0x16 Align: 2(1)
      __exit               0x000001CA  Pub  Ref by:   Segment part 6 (?_exit)
  ============================================================
  Module: ?_exit
       Segment part 0, CODE
       Address: CODE 0x000001E0 Size: 0x0 Align: 2(1)
      _exit                0x000001E0  Pub  Ref by:   exit (?exit)
                                                      ?cstartup_call_main (?C_STARTUP)
    --------------------------------------------------
       Segment part 6, CODE
       Address: CODE 0x000001E0 Size: 0x4 Align: 2(1)
       Ref by:   _exit
  ============================================================
  Module: ?RESET
       Segment part 0, INTVEC [root]
       Address: CODE 0x00000000 Size: 0x4 Align: 2(1)
      ?RESET               0x00000000  Pub  Ref by:   Segment part 2 (?C_STARTUP)
  ============================================================
  Module: ?C_STARTUP
       Segment part 2, CODE
       Address: CODE 0x000001E4 Size: 0x0 Align: 2(1)
      __program_start      0x000001E4  Pub  Ref by:   Absolute parts (?ABS_ENTRY_MOD)
      ?C_STARTUP           0x000001E4  Pub  Ref by:   ?RESET (?RESET)
      __RESTART            0x000001E4  Pub
    --------------------------------------------------
       Segment part 5, CODE
       Address: CODE 0x000001E4 Size: 0xC Align: 2(1)
       Ref by:   Segment part 2
    --------------------------------------------------
       Segment part 7, CODE
       Address: CODE 0x000001F0 Size: 0x4 Align: 2(1)
       Ref by:   Segment part 5
      ?call_low_level_init  0x000001F0  Pub
    --------------------------------------------------
       Segment part 11, CODE
       Address: CODE 0x000001F4 Size: 0xC Align: 2(1)
       Ref by:   ?call_low_level_init
      ?cstartup_call_main  0x000001F4  Pub
  ============================================================
  Module: ?exit
       Segment part 3, CODE
       Address: CODE 0x00000200 Size: 0x4 Align: 2(1)
      exit                 0x00000200  Pub  Ref by:   ?cstartup_call_main (?C_STARTUP)
  ============================================================
  Module: ?S_SHL_L02
  ============================================================
  Module: ?xV_SWITCH_L06
       Segment part 1, CODE
       Address: CODE 0x00000204 Size: 0x2 Align: 2(1)
       Ref by:   ?SV_SWITCH_L06
      GET_INFO_S           0x00000204  Loc
    --------------------------------------------------
       Segment part 2, CODE
       Address: CODE 0x00000206 Size: 0xC Align: 2(1)
       Ref by:   GET_INFO_S
      GET_INFO_C           0x00000206  Loc
    --------------------------------------------------
       Segment part 4, CODE
       Address: CODE 0x00000212 Size: 0x6 Align: 2(1)
      ?SV_SWITCH_L06       0x00000212  Pub  Ref by:   btn_state (main)
    --------------------------------------------------
       Segment part 5, CODE
       Address: CODE 0x00000218 Size: 0x6 Align: 2(1)
       Ref by:   ?SV_SWITCH_L06
      P_0_S                0x00000218  Loc
    --------------------------------------------------
       Segment part 7, CODE
       Address: CODE 0x0000021E Size: 0x6C Align: 2(1)
       Ref by:   P_0_S
      CHECK_LOW_LIMIT      0x0000021E  Loc
  ============================================================
  Module: ?PROLOGUE_L09
  ============================================================
  Module: ?EPILOGUE_B_L09
  ============================================================
  Module: ?REGISTER_CGREGR4_L10
  ============================================================
  Module: ?REGISTER_CGREGR5_L10
  ============================================================
  Module: ?low_level_init
       Segment part 3, CODE
       Address: CODE 0x0000028A Size: 0x4 Align: 2(1)
      __low_level_init     0x0000028A  Pub  Ref by:   ?call_low_level_init (?C_STARTUP)
  ============================================================
  Module: ?segment_init
**************************************************************
Linker generated:
  Module: ?FILLER_BYTES
       Segment part 1, INTVEC
       Address: CODE 0x00000000 Size: 0x4 Align: 1(0)
    --------------------------------------------------
       Segment part 0, ?FILL1
       Address: CODE 0x00000004 Size: 0xC8 Align: 1(0)


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************

SEGMENT   SPACE     START/END ADDRESS      SIZE  TYPE  ALIGN
-------   -----   ---------------------    ----  ----  -----
INTVEC    CODE   0x00000000 - 0x00000003    0x4   com   2(1)
?FILL1    CODE   0x00000004 - 0x000000CB   0xC8   rel   1(0)
SWITCH    CODE   0x000000CC - 0x000000DB   0x10   rel   2(1)
CODE      CODE   0x000000DC - 0x0000028D  0x1B2   rel   2(1)
CSTACK    DATA   0x00000100 - 0x0000011F   0x20   dse   1(0)
RSTACK    DATA   0x00000120 - 0x0000013F   0x20   dse   1(0)
ABSOLUTE  DATA         0x0000001F                 abs   1(0)
          DATA         0x00000020
          DATA   0x00000026 - 0x00000028    0x3
          DATA   0x0000002A - 0x0000002B    0x2

 454 bytes of CODE memory (+            200 range fill )
  64 bytes of DATA memory (+ 8 absolute )

Errors: none
Warnings: none
